//CURSO DE GIT//
--comandos UNIX
ls: listado de los directorios.
cd carpeta/: ir a la carpeta.
cd..: -- volver a la carpeta anterior.
pwd: saber en que carpeta nos encontramos.
mkdir "nombre-carpeta": crear carpeta.

git init: inicializar git en una carpeta


//RAMAS EN GIT//
git branch -m "main": cambiar nombre a la rama
git status: ver el estado de los ficheros.
git add .: para a√±adir todo los ficheros.
git commit -m "mensaje": pasarlo a git de local con un comentario.
git log: ver todo el historial.

git checkout: situarnos en un punto completo para volver
git reset: para revertir aun sin enviar descartar cambios y no tener en cuenta.
git log --graph: muestra de manera mas grafica el historial
.gitignore: para que git no lo tome en cuenta
git diff: ver que cambios se realizo en el fichero antes de hacer el commit.
git checkout HEAD: ir a la cabecera.
git checkout "codigo del commit": para volver a un sitio mas concreto.

git reset: resetar cambios o situarnos en un punto concreto de la linea de commit
git reset --hard id: reset al id indicado funciona hacia atras y adelante
git reflog: historial completo de interacciones.

git tag "nombre": etiquetar commit para referenciar puntos importantes para versionar
git tag: para ver los tag que se tiene
git cheackout tags/"nombre": para moverse a los tag que se crearon.

//CREAR RAMAS EN GIT//
git branch login: crear una nueva rama
git swich login: entrar dentro de esa rama
git merge main: para fusionar ramas y traer los datos modificados
git stash : guarda el proceso sin hacer add
git branch -d "nombre": eliminar ramas.
